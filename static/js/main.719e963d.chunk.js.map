{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","images/coronavirus_logo.jpg"],"names":["module","exports","countAnimation","value","start","end","duration","separator","Cards","data","confirmed","deaths","recovered","lastUpdate","currData","Date","toDateString","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","url","fetchData","country","a","fetUrl","axios","get","response","fetchDailyData","map","entry","total","date","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchDailyApi","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetch_data","setState","this","console","error","style","covidImg","src","coronaImg","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.719e963d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst Cards = ({data:{confirmed, deaths, recovered, lastUpdate}}) => {\n    \n    if(!confirmed){\n        return \"Loading ...\";\n    }\n\n    const currData = new Date(lastUpdate).toDateString();\n    \n        return (\n            <div className={styles.container}>\n                <Grid container spacing={3} justify=\"center\">\n                    <Grid item component={Card}  xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                            <Typography variant=\"h5\">{countAnimation(confirmed)}</Typography>\n                            <Typography color=\"textSecondary\">{currData}</Typography>\n                            <Typography variant=\"body2\" >Number of active covid cases</Typography>\n                        </CardContent>\n                    </Grid>\n                    <Grid item component={Card}  xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                            <Typography variant=\"h5\">{countAnimation(recovered)}</Typography>\n                            <Typography color=\"textSecondary\">{currData}</Typography>\n                            <Typography variant=\"body2\" >Number of recoveries</Typography>\n                        </CardContent>\n                    </Grid>\n                    <Grid item component={Card}  xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                            <Typography variant=\"h5\">{countAnimation(deaths)}</Typography>\n                            <Typography color=\"textSecondary\">{currData}</Typography>\n                            <Typography variant=\"body2\" >Number of deaths</Typography>\n                        </CardContent>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n\n       \n}\n\nfunction countAnimation({value}){\n            return (\n                <CountUp \n                    start={0}\n                    end={value}\n                    duration={1.5}\n                    separator=\",\"\n                />\n            );\n        }\nexport default Cards;","import axios from 'axios';\n\nconst url = \"https://covid19.mathdro.id/api\";\n\n\nexport const fetchData = async (country) => {\n    try {\n        let fetUrl = country && country != 'global' ? `${url}/countries/${country}` : url;\n        const { data: { confirmed, deaths, recovered, lastUpdate } } = await axios.get(fetUrl);\n        const response = {\n            confirmed, deaths, recovered, lastUpdate\n        };\n\n        return response;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        return data.map((entry) => ({\n            confirmed: entry.confirmed.total,\n            deaths: entry.deaths.total,\n            date: entry.reportDate,\n        }));\n    } catch (error) {\n\n    }\n}\n\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`)\n        return countries.map((entry) => entry.name);\n\n    } catch (error) {\n\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState([]);\n\n\n    useEffect(() => {\n        const fetchDailyApi = async () => {\n            setDailyData(await fetchDailyData());\n        };\n\n        fetchDailyApi();\n\n    }, []);\n\n    const lineChart = (\n        dailyData.length ?\n            <Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [\n                        {\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true,\n                        },\n                        {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: '#ff00ff',\n                            fill: true,\n                        }]\n                }}\n            /> : null\n    );\n\n    const barChart = (\n        confirmed && recovered && deaths ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [\n                        {\n                            label: \"People\",\n                            backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,0,255,0.5)', 'rgba(0,0,255,0.5)'],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        },\n\n                    ]\n\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current state: ${country}` }\n                }}\n            />\n        ) : ''\n    );\n\n    return (\n        <div className={styles.container}>\n            { country && country !== 'global' ? barChart : lineChart}\n        </div>\n    );\n}\n\n\nexport default Chart;","import React, {useState, useEffect}  from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport {fetchCountries} from '../../api'\nimport styles from './CountryPicker';\n\nconst CountryPicker = ({handleCountryChange}) =>{\n\n    const [countries, setCountries] = useState([]);\n\n    useEffect(()=>{\n      (async()=> setCountries(await fetchCountries()))()  \n    },[])\n\n   \n    \n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"global\" onChange={(e)=>{handleCountryChange(e.target.value)}}>\n            <option value='global'> Global</option>\n             {countries.map((entry, i) => (<option key={i}  value={entry}> {entry}</option>) )}\n            </NativeSelect>\n        </FormControl>\n    );\n}\n\n\nexport default CountryPicker;","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components'\nimport { fetchData } from './api'\n//style\nimport style from './App.module.css';\n\n//asset\nimport coronaImg from './images/coronavirus_logo.jpg'\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount() {\n        try {\n            const fetch_data = await fetchData(this.state.country);\n            this.setState({\n                data: fetch_data\n            });\n\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    handleCountryChange = async (country) => {\n\n        const fetch_data = await fetchData(country);\n        this.setState({\n            data: fetch_data,\n            country: country,\n        });\n        //fetch data\n        //set country\n    }\n\n    render() {\n        const { data, country } = this.state;\n        return (\n            <div className={style.container}>\n                <img className={style.covidImg} src={coronaImg} alt=\"Covid Image\" />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country} />\n            </div>\n        );\n    }\n\n}\n\nexport default App","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"covidImg\":\"App_covidImg__2EUfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","module.exports = __webpack_public_path__ + \"static/media/coronavirus_logo.169be104.jpg\";"],"sourceRoot":""}